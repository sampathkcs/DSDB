#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#include <netinet/ip.h>
#include <netinet/udp.h>

// Define the IP address and port of the SOME/IP generator
#define GENERATOR_IP "192.168.1.11"

// Function to sniff packets and check for specific IP
void sniff_packets() {
    int sockfd;
    char buffer[65536];
    struct sockaddr_in source_addr;
    socklen_t addr_len = sizeof(source_addr);

    // Create a raw socket to sniff UDP packets
    if ((sockfd = socket(AF_INET, SOCK_RAW, IPPROTO_UDP)) < 0) {
        perror("Socket creation failed");
        exit(EXIT_FAILURE);
    }

    printf("Starting to sniff packets...\n");

    // Continuously sniff packets
    while (1) {
        // Receive a packet
        int packet_size = recvfrom(sockfd, buffer, sizeof(buffer), 0, (struct sockaddr*)&source_addr, &addr_len);
        if (packet_size < 0) {
            perror("Packet receive failed");
            continue;
        }

        // Extract the IP header
        struct iphdr *iph = (struct iphdr *)(buffer);

        // Convert source IP to human-readable format
        struct in_addr source_ip;
        source_ip.s_addr = iph->saddr;

        // Check if the packet is from the specific IP
        if (strcmp(inet_ntoa(source_ip), GENERATOR_IP) == 0) {
            printf("Detected packet from SOME/IP generator at %s\n", inet_ntoa(source_ip));
        }
    }

    // Close the socket (though the program runs indefinitely)
    close(sockfd);
}

int main() {
    // Start sniffing packets
    sniff_packets();

    return 0;
}
